@use '../Base/config' as config;
/*----------------------------------------------------
	汎用クラス
----------------------------------------------------*/
.bold,
.strong {
	font-weight: bold;
}

.u-hide {
	display: none;
}
.u-breakLine {
	display: inline-block;
}
.u-center {
	text-align: center;
}

.u-only-sp {
	display: block !important;
	@include config.pc-tab {
		display: none !important;
	}
}

.u-only-pc {
	display: none !important;
	@include config.pc-tab {
		display: block !important;
	}
}

.u-color-accent {
	color: var(--color-assort);
}
.u-color-blend {
	position: relative;
	svg,
	img {
		filter: grayscale(100%);
	}
	&:after {
		content: '';
		display: block;
		width: 100%;
		height: 100%;
		position: absolute;
		left: 0;
		top: 0;
		pointer-events: none;
		background: #FF552B;
		mix-blend-mode: screen;
	}
}
.u-gradient {
	display: inline-flex;
	position: relative;
	color: #fff;
	span {
		position: relative;
	}
	&:before {
		content: '';
		display: block;
		width: calc(100% + 0.1em);
		height: 85%;
		position: absolute;
		left: -0.05em;
		top: 0.01em;
		pointer-events: none;
		background: linear-gradient(90deg, #FF552B 37.02%, transparent 100%);
	}
}
.u-template {
	display: flex;
	flex-direction: column;
	gap: 80/16+rem;
	padding-bottom: 100/16+rem;
	> div {
		display: flex;
		flex-direction: column;
		gap: 24/16+rem;
	}
}
.u-gap {
	display: flex;
	flex-direction: column;
	//align-items: flex-start;
	> * {
		flex-shrink: 0;
	}
	gap: var(--gap);
}
.u-section-dark {
	// background: var(--accent-color-dark);
}
.is-disabled {
	opacity: 0.7;
	pointer-events: none;
}

.u-budoux {
	word-break: keep-all;
	overflow-wrap: anywhere;
}

@for $i from 1 through 30 {
	[data-delay="#{$i * 0.1}"] {
		transition-delay: #{$i * 0.1}s !important;
	}
}

.__loop {
	animation: loopLeft linear 30s infinite;
	will-change: transform;
	display: flex;
	img {
		width: auto;
		max-width: none;
		height: 300/16+rem;
	}
	@include config.pc {
		animation: loopLeft linear 50s infinite;
		img {
			height: 526/16+rem;
		}
	}
}
@keyframes loopLeft {
	from {
		transform: translate3d(0, 0, 0);
	}
	to {
		transform: translate3d(-100%, 0, 0);
	}
}
@keyframes loopRight {
	from {
		transform: translate3d(-100%, 0, 0);
	}
	to {
		transform: translate3d(0, 0, 0);
	}
}
.u-block-reveal {
	position: relative;
	z-index: 2;
	overflow: hidden;
	&:before {
		content: '';
		display: block;
		position: absolute;
		left: 0;
		top: 0;
		bottom: 0;
		width: 0;
		background: var(--color-assort);
		z-index: 2;
		pointer-events: none;
		opacity: 1;

	}
	&.is-visible:before,
	.is-visible &:before {
		width: 100%;
		left: 100%;
		transition: width .3s var(--easeOutQuart), left .3s .3s var(--easeOutQuart);
	}
	> * {
		opacity: 0;
		transition: transform 2s var(--easeOutQuart), opacity 1s .2s var(--easeOutQuart);
	}
	img {
		transition: transform 2s var(--easeOutQuart), opacity 1s .2s var(--easeOutQuart);
		transform: scale(1.2);
		opacity: 0;
	}
	&.is-visible,
	.is-visible & {
		img {
			transform: scale(1);
			opacity: 1;
		}
		> * {
			opacity: 1;
		}
	}
	@include config.pc {}
}
.u-mask-block {
	clip-path: polygon(0 0, 0 0, 0 0, 0 0);
	//transform: translate3d(0, #{20px}, 0);
	opacity: 0;
	.is-visible &,
	&.is-visible {
		opacity: 1;
		transition: .4s var(--easeOutQuart);
		transform: translate3d(0,0,0);
		clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
	}
}